{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, resolveComponent as _resolveComponent, withModifiers as _withModifiers, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  icon: ['fas', 'circle-notch'],\n  pulse: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_button = _resolveComponent(\"base-button\");\n\n  return _openBlock(), _createBlock(_component_base_button, {\n    disabled: $data.isPending,\n    color: $props.color,\n    onClick: _withModifiers($options.handleClick, [\"stop\", \"prevent\"])\n  }, {\n    default: _withCtx(() => [$data.isPending ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), _renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"disabled\", \"color\", \"onClick\"]);\n}","map":{"version":3,"mappings":";;;EAQSA,IAAI,EAAE;EACPC,KAAK,EAAL;;;;;uBARJC,aAWcC,sBAXd,EAWc;IAVXC,QAAQ,EAAEC,eAUC;IATXC,KAAK,EAAEC,YASI;IARXC,OAAK,iBAAeC,oBAAf,EAA0B,mBAA1B;EAQM,CAXd;sBAKE,MAIE,CAHMJ,iCADRK,oBAIE,MAJF,kDAIE,EACFC,YAAQC,WAAR,EAAQ,SAAR,CADE;;;;GATJ;;EAAA","names":["icon","pulse","_createBlock","_component_base_button","disabled","$data","color","$props","onClick","$options","_createElementBlock","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/plugn/tdweb/td3-untracked/vue-oauth-microsoft-graph/src/components/AsyncButton.vue"],"sourcesContent":["<template>\n    <base-button\n      :disabled=\"isPending\"\n      :color=\"color\"\n      @click.stop.prevent=\"handleClick\"\n    >\n      <span \n        v-if=\"isPending\"\n        :icon=\"['fas', 'circle-notch']\"\n        pulse\n      />\n      <slot />\n    </base-button>\n  </template>\n  \n  <script>\n  import BaseButton from './BaseButton.vue'\n  \n  export default {\n    name: 'AsyncButton',\n    components: { BaseButton },\n    inheritAttrs: false,\n  \n    props: {\n      color: {\n        type: String,\n        default: 'primary'\n      }\n    },\n  \n    data () {\n      return {\n        isPending: false\n      }\n    },\n  \n    methods: {\n      handleClick () {\n        const originalOnClick = /** @type {() => Promise<void>} */ (this.$attrs.onClick)\n        this.isPending = true\n        originalOnClick().finally(() => { this.isPending = false })\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module"}